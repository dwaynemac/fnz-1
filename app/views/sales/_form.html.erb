<%= simple_form_for(@sale, :url => form_url, :validate => true, :html => {:class => "form-horizontal"}) do |f| %>
	<% if @business.padma_id.blank? %>
    	<%= f.association :contact, :as => :select, :collection => @business.contacts, :input_html => {'data-business-id' => @business.id, 'data-placeholder' => 'Please select contact',:class => "chosen"} %>
    <% else %>
        <%= f.input :padma_contact_id, :as => :padma_contact %>
    <% end %>

    <%= f.association :agent, :as => :select, :collection => @business.agents, :input_html => {'data-placeholder' => 'Please select agent',:class => "chosen"} %>

    <%= f.association :product, :as => :select, :collection => @business.products, :input_html => {'data-business-id' => @business.id, 'data-placeholder' => 'Please select product',:class => "chosen"} %>

    <%= f.input :sold_on, :as => :date_picker %>

    <%= f.input :status, :as => :payment_status %>

    <% if can? :manage, @business.transactions.build %>
    <h3>Transactions</h3>
    <%= render :partial => 'nested_transactions_table', :locals => {:f => f, :transactions => @transactions} %>
    <% else %>
        <%= link_to "Mark as paid", new_business_sale_payment_path(@business, f.object), :remote => true %>
    <% end %>
    <%= f.button :submit, :class => "btn btn-primary" %>

<% end %>

<%= javascript_tag do %>

    function contactFormatResult(contact) {
    var markup = "<div>" + contact.name + "</div>";
    return markup;
    }

    function contactFormatSelection(contact) {
    return contact.name;
    }

    $("#sale_padma_contact_id").select2({
    placeholder: "Search contact",
    minimumInputLength: 3,
    ajax: {
    url: "http://<%= Contacts::HOST %>/v0/contacts/search_for_select",
    type: 'POST',
    dataType: 'jsonp',
    quietMillis: 100,
    data: function (term, page) { // page is the one-based page number tracked by Select2
    return {
    page: page,
    per_page: 10,
    sort: {
    first_name: "asc",
    last_name: "asc"
    },
    username: "<%= current_user.username %>",
    account_name: "<%= current_user.businesses.find(params[:business_id]).padma_id %>",
    only_name: true,
    full_text: term,
    app_key: "<%= ENV['contacts_key'] %>"
    };
    },
    results: function (data, page) {
    var more = (page * 10) < data.total; // whether or not there are more results available

    // notice we return the value of more so Select2 knows if more results can be loaded
    return {results: data.collection, more: more};
    }
    },
    initSelection: function(element, callback) {
    // the input tag has a value attribute preloaded that points to a preselected movie's id
    // this function resolves that id attribute to an object that select2 can render
    // using its formatResult renderer - that way the movie name is shown preselected
    var id=$(element).val();
    var name=$(element).attr("data-name");
    if (id!=="") {
    callback({"id": id, "name": name});
    }
    },
    formatResult: contactFormatResult, // omitted for brevity, see the source of this page
    formatSelection: contactFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
    });

<% end %>